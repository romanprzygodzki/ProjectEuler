"""
Project Euler
Even Fibonacci Numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

fibonacci_sequence = [1,2]

max = 4000000
#This specifies the maximum number you want in the sequence

while fibonacci_sequence[len(fibonacci_sequence)-1] < max:
	l = len(fibonacci_sequence)
	fibonacci_sequence.append(fibonacci_sequence[l-1]+fibonacci_sequence[l-2])
	#The while loop generates all the fibonacci numbers less than the maximum specified
	
even_fibonacci = [i for i in fibonacci_sequence if i % 2 ==0]

print "The sum of the even fibonacci numbers less than %s is %s" % ('{:,.0f}'.format(max), '{:,.0f}'.format(sum(even_fibonacci)))
